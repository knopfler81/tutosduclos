.container
  .row
    .col-xs-12.white-background
      p  = t("show.post")+ time_ago_in_words(@tuto.created_at) + t("show.ago") +  t("show.by") + " #{@tuto.user.nickname}"
      h3 = @tuto.title.capitalize
      br
      .add-review
        button.btn.btn-primary[type="button" data-toggle="modal" data-target="#myModal"]
          | Comment & rate
      / = link_to like_tuto_path(@tuto), method: :put, class:"btn btn-custom" do
      /   span.glyphicon.glyphicon-heart
      /   span<>
      /     = @tuto.get_upvotes.size
      /= @tuto.rating_average
      hr
      = @tuto.description
      hr
      = markdown(@tuto.content)

  .row
    -if user_signed_in?
        .row
          .col-xs-12.col-sm-2
            = link_to t("show.button_back"), tutos_path, class: "btn btn-custom"

          -if @tuto.user_id == current_user.id || current_user.admin? == true
            .col-xs-12.col-sm-2
              = link_to t("show.button_delete"), tuto_path(@tuto), data: { confirm: t("show.confirmation_delete")}, method: :delete, class: "btn btn-danger"
            .col-xs-12.col-sm-2
              = link_to t("show.button_edit"), edit_tuto_path(@tuto), class: "btn btn-custom"
          / .col-xs-12.col-sm-2
          /   .add-review
          /     button.btn.btn-primary[type="button" data-toggle="modal" data-target="#myModal"]
          /       |  Add a comment

        = render "tutos/review_modal", tuto: @tuto, review: @review
        = render "tutos/reviews"



